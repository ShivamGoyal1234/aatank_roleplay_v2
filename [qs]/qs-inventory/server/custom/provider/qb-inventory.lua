local function exportHandler(exportName, func)
    AddEventHandler(('__cfx_export_qb-inventory_%s'):format(exportName), function(setCB)
        setCB(func)
    end)
end

exportHandler('AddItem', function(identifier, item, amount, slot, info, reason)
    return AddItem(identifier, item, amount, slot, info)
end)
exportHandler('RemoveItem', function(identifier, item, amount, slot, reason)
    return RemoveItem(identifier, item, amount, slot)
end)
exportHandler('OpenShop', OpenShop)
exportHandler('SaveInventory', SaveInventory)
exportHandler('HasItem', HasItem)
exportHandler('CreateUsableItem', CreateUsableItem)
exportHandler('UseItem', UseItem)
exportHandler('hasCraftItems', hasCraftItems)
exportHandler('GetStashItems', function(id)
    return GetOtherInventoryItems('stash', id)
end)
exportHandler('AddItemIntoStash', AddItemIntoStash)
exportHandler('RemoveFromStash', RemoveFromStash)
exportHandler('RemoveItemIntoStash', RemoveItemIntoStash)
exportHandler('StashCanCarryItem', StashCanCarryItem)
exportHandler('RemoveFromGarbage', RemoveFromGarbage)
exportHandler('AddToGarbage', AddToGarbage)
exportHandler('AddToTrunk', AddToTrunk)
exportHandler('RemoveFromTrunk', RemoveFromTrunk)
exportHandler('AddToGlovebox', AddToGlovebox)
exportHandler('RemoveFromGlovebox', RemoveFromGlovebox)
exportHandler('AddToDrop', AddToDrop)
exportHandler('RemoveFromDrop', RemoveFromDrop)
exportHandler('CreateNewDrop', CreateNewDrop)
exportHandler('addTrunkItems', addTrunkItems)
exportHandler('addGloveboxItems', addGloveboxItems)
exportHandler('RegisterStash', function(source, id, slots, weight, customLabel)
    TriggerClientEvent(Config.InventoryPrefix .. ':client:RegisterStash', source, id, slots, weight, customLabel or id)
end)
exportHandler('useItemSlot', useItemSlot)
exportHandler('GeneratePlate', GeneratePlate)
exportHandler('LoadInventory', LoadInventory)
exportHandler('GetTotalUsedSlots', GetTotalUsedSlots)
exportHandler('GetItemLabel', GetItemLabel)
exportHandler('GetTotalWeight', GetTotalWeight)
exportHandler('GetSlotsByItem', GetSlotsByItem)
exportHandler('GetFirstSlotByItem', GetFirstSlotByItem)
exportHandler('CreateSerialNumber', CreateSerialNumber)
exportHandler('GetItemTotalAmount', GetItemTotalAmount)
exportHandler('CanCarryItem', CanCarryItem)

exportHandler('GetItemBySlot', GetItemBySlot)
exportHandler('GetItemByName', GetItemByName)
exportHandler('GetItemsByName', GetItemsByName)
exportHandler('ClearInventory', ClearInventorySafe)
exportHandler('SetInventory', SetInventory)
exportHandler('SetInventoryItem', SetInventoryItem)
exportHandler('SetInventoryItems', SetInventoryItems)
exportHandler('SetItemData', SetItemData)
exportHandler('CreateShop', CreateShop)
exportHandler('OpenInventory', function(source, identifier, data)
    -- print('identifier', identifier)
    -- print('data', json.encode(data))
    if not data then
        data = {
            maxweight = 60000,
            slots = 35
        }
    end
    OpenInventory('stash', identifier, data, source)
    TriggerClientEvent(Config.InventoryPrefix .. ':client:SetCurrentStash', source, identifier)
    return true
end)
exportHandler('OpenInventoryById', function(source, id)
    OpenInventory('otherplayer', id, nil, source)
end)

-- RegisterCommand('cc', function(source, args, raw)
--     exports['qb-inventory']:OpenInventoryById(source, tonumber(args[1]))
-- end)
